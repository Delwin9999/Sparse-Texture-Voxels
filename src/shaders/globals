//---------------------------------------------------------
// GLOBALS
//---------------------------------------------------------

#version 420 core

// Max values
#define NUM_VOXEL_DIRECTIONS       6
#define MAX_VOXEL_CASCADES         3
#define MAX_VOXEL_TEXTURES         18 // directions*cascades
#define MAX_TEXTURE_ARRAYS         10
#define NUM_OBJECTS_MAX            500
#define NUM_MESHES_MAX             500
#define MAX_POINT_LIGHTS           8
                                                 
// Vertex attribute indexes                      
#define POSITION_ATTR              0
#define NORMAL_ATTR                1
#define UV_ATTR                    2
#define PROPERTY_INDEX_ATTR        3
#define DEBUG_TRANSFORM_ATTR       4
#define DEBUG_COLOR_ATTR           5

// Uniform buffer objects binding points
#define PER_FRAME_UBO_BINDING             0
#define LIGHT_UBO_BINDING                 1
#define MESH_MATERIAL_ARRAY_BINDING       2
#define POSITION_ARRAY_BINDING            3
                                                
// Sampler binding points                       
#define SHADOW_MAP_BINDING                   1
#define VOXEL_DIRECTIONS_ARRAY_BINDING       2 // right, left, up, down, front for all cascades
#define DIFFUSE_TEXTURE_ARRAY_BINDING        20

// Image binding points
#define VOXEL_DIRECTIONS_IMAGE_ARRAY_BINDING       0 // right, left, up, down, front, back

// Shadow Map FBO
#define SHADOW_MAP_FBO_BINDING        0
#define BLURRED_MAP_FBO_BINDING       1

// Object properties
#define POSITION_INDEX       0
#define MATERIAL_INDEX       1

layout(std140, binding = PER_FRAME_UBO_BINDING) uniform PerFrameUBO
{
    mat4 uViewProjection;
    mat4 uLightView;
    mat4 uLightProj;
    vec3 uCamLookAt;
    vec3 uCamPos;
    vec3 uCamUp;
    vec3 uLightDir;
    vec3 uLightColor;
    vec4 uVoxelRegionWorld[MAX_VOXEL_CASCADES];
    vec2 uScreenRes;
    float uAspect;
    float uTime;
    float uTimestamp;
    float uFOV;
    float uVoxelRes;
    float uNumMips;
    float uSpecularFOV;
    float uSpecularAmount;
    int uCurrentMipLevel;
    int uCurrentCascade;
};